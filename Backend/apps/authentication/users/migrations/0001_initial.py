# Generated by Django 4.0.5 on 2022-07-13 20:41

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('groups', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PeopleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', help_text='Nombres del usuario', max_length=40, verbose_name='Nombres')),
                ('last_name', models.CharField(default='', help_text='Apellidos del usuario', max_length=40, verbose_name='Apellidos')),
                ('full_name', models.CharField(default='', help_text='Nombres y apellidos del usuario', max_length=100, verbose_name='Nombres y Apellidos')),
                ('avatar', models.ImageField(blank=True, default='users/default.jpg', null=True, upload_to='')),
                ('phone', models.CharField(default='', help_text='Celular o teléfono del usuario', max_length=20, verbose_name='Celular o teléfono')),
                ('role', models.CharField(choices=[('T', 'Profesor'), ('M', 'Administrador'), ('S', 'Superusuario'), ('E', 'Editor'), ('A', 'Asistente')], default='T', help_text='Rol del usuario', max_length=1, verbose_name='Rol')),
                ('birthday', models.DateField(blank=True, default=django.utils.timezone.now, help_text='Fecha de nacimiento del usuario', null=True, verbose_name='Fecha de nacimiento')),
                ('age', models.CharField(default=0, help_text='Edad del usuario', max_length=4, verbose_name='Edad')),
                ('gender', models.CharField(choices=[('M', 'Hombre'), ('W', 'Mujer'), ('O', 'Otro')], default='O', max_length=1, verbose_name='Género')),
                ('is_active', models.BooleanField(default=True, help_text='Designa si la persona está activa', verbose_name='Es una persona activa')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='Fecha de creación del usuario', null=True, verbose_name='Fecha de cración')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Fecha de edición del usuario', null=True, verbose_name='Fecha de edición')),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de visualización', verbose_name='Orden')),
                ('groups', models.ManyToManyField(blank=True, to='groups.groupsmodel', verbose_name='Grupos del usuario')),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Personas',
                'db_table': 'apps_authentication_people',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UsersModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'único': 'Un usuario con este nombre de usuario ya existe'}, help_text='Requerido. 150 carácteres o menos. Alfanumérico y @.+-_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Usuario')),
                ('email', models.EmailField(error_messages={'único': 'Este correo ya existe'}, help_text='Requerido. 254 carácteres o menos. Formato de correo válido.', max_length=254, unique=True, verbose_name='Correo')),
                ('privacy', models.BooleanField(default=False, error_messages={'requerido': 'Debe aceptar los términos y condiciones'}, help_text='Requerido. Acepta los términos y condiciones.', verbose_name='Términos y Condiciones')),
                ('verification_code', models.CharField(default='0000', error_messages={'requerido': 'Debe ingresar el código de verificación'}, help_text='Requerido. 4 carácteres o menos. Generado automáticamente y llega al correo', max_length=4, verbose_name='Código de verificación')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa si el usuario puede acceder al administrador', verbose_name='Es un administrador')),
                ('is_active', models.BooleanField(default=False, help_text='Designa si el usuario está activo', verbose_name='Es un usuario activo')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha de creación del usuario', verbose_name='Fecha de cración')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Fecha de edición del usuario', verbose_name='Fecha de edición')),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de visualización', verbose_name='Orden')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('people', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.peoplemodel')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'apps_authentication_users',
                'ordering': ['order'],
                'unique_together': {('username', 'email')},
            },
        ),
    ]
